name: Deploy to Cloud Run

on:
  push:
    branches: [main]
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
  workflow_dispatch:

env:
  PROJECT_ID: suzumina-click-firebase
  SERVICE_NAME: suzumina-web
  REGION: asia-northeast1
  REGISTRY: gcr.io

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared packages
        run: |
          pnpm --filter @suzumina.click/shared-types build
          pnpm --filter @suzumina.click/ui build

      - name: Run tests
        run: |
          cd apps/web
          pnpm test

      - name: Build Docker image
        working-directory: ./apps/web
        run: |
          IMAGE_TAG="${REGISTRY}/${PROJECT_ID}/${SERVICE_NAME}:${{ github.sha }}"
          LATEST_TAG="${REGISTRY}/${PROJECT_ID}/${SERVICE_NAME}:latest"
          
          # Build from project root to include workspace dependencies
          cd ../..
          docker build -f apps/web/Dockerfile -t $IMAGE_TAG -t $LATEST_TAG .

      - name: Push Docker image
        run: |
          IMAGE_TAG="${REGISTRY}/${PROJECT_ID}/${SERVICE_NAME}:${{ github.sha }}"
          LATEST_TAG="${REGISTRY}/${PROJECT_ID}/${SERVICE_NAME}:latest"
          
          docker push $IMAGE_TAG
          docker push $LATEST_TAG

      - name: Deploy to Cloud Run
        run: |
          IMAGE_TAG="${REGISTRY}/${PROJECT_ID}/${SERVICE_NAME}:${{ github.sha }}"
          
          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE_TAG \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --memory 1Gi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 100 \
            --concurrency 1000 \
            --timeout 300 \
            --set-env-vars="NODE_ENV=production,NEXT_TELEMETRY_DISABLED=1,GOOGLE_CLOUD_PROJECT=${PROJECT_ID}" \
            --service-account="${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}" \
            --execution-environment gen2 \
            --cpu-boost

      - name: Update traffic
        run: |
          gcloud run services update-traffic $SERVICE_NAME \
            --to-latest \
            --region $REGION

      - name: Show deployment URL
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --format 'value(status.url)')
          echo "ðŸš€ Deployment successful!"
          echo "ðŸ“± Service URL: $SERVICE_URL"
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT