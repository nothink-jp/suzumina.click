import type {
	DataSourceTracking,
	OptimizedFirestoreDLsiteWorkData,
} from "@suzumina.click/shared-types";
import type { Work } from "./work-mapper";

/**
 * Firestore Work Mapper
 *
 * 新しいWorkエンティティを既存のFirestore構造に変換
 * 下位互換性のための一時的なブリッジ
 */
export class FirestoreWorkMapper {
	/**
	 * WorkエンティティをFirestore形式に変換
	 */
	static toFirestoreFormat(
		work: Work,
		existingData?: OptimizedFirestoreDLsiteWorkData | null,
	): OptimizedFirestoreDLsiteWorkData {
		const now = new Date().toISOString();

		// データソース追跡情報
		const dataSources: DataSourceTracking = {
			infoAPI: {
				lastFetched: now,
				wishlistCount: work.wishlistCount,
				customGenres: work.genres,
			},
		};

		return {
			// 基本識別情報
			id: work.id,
			productId: work.productId,

			// 基本作品情報
			title: work.title,
			circle: work.circle.name,
			description: work.title, // APIでは取得できないため仮値
			category: "etc" as const, // 適切なマッピングが必要
			originalCategoryText: "",
			workUrl: work.workUrl,
			thumbnailUrl: work.thumbnailUrl || "",
			highResImageUrl: work.thumbnailUrl,

			// 価格情報（新しいValue Object形式）
			price: work.price
				? {
						current: work.price.amount,
						currency: work.price.currency,
						original: work.price.original,
						discount: work.price.discount,
						point: work.price.point,
					}
				: {
						current: 0,
						currency: "JPY",
					},

			// 評価情報（新しいValue Object形式）
			rating: work.rating
				? {
						stars: work.rating.stars,
						count: work.rating.count,
						averageDecimal: work.rating.average,
					}
				: undefined,

			// その他の情報
			wishlistCount: work.wishlistCount,
			totalDownloadCount: undefined, // 廃止済み

			// クリエイター情報（新しいValue Object形式から変換）
			voiceActors: work.creators.voice || [],
			scenario: work.creators.scenario || [],
			illustration: work.creators.illustration || [],
			music: work.creators.music || [],
			author: work.creators.other || [],

			// ジャンル
			genres: work.genres,

			// 日付情報
			releaseDate: work.releaseDate?.original,
			releaseDateISO: work.releaseDate?.iso,
			releaseDateDisplay: work.releaseDate?.display,

			// メタデータ
			seriesName: work.seriesName,
			ageRating: work.ageRating,
			workFormat: work.workFormat,
			fileFormat: work.fileFormat,

			// 詳細情報（未実装）
			sampleImages: [],
			isExclusive: false,

			// API準拠フィールド（下位互換性のため維持）
			apiGenres: [],
			apiCustomGenres: [],
			apiWorkOptions: work.workFormat
				? {
						[work.workFormat]: { name: work.workFormat },
					}
				: {},

			// データソース追跡
			dataSources,

			// システム管理情報
			lastFetchedAt: now,
			createdAt: existingData?.createdAt || now,
			updatedAt: now,
		};
	}

	/**
	 * Firestore形式からWorkエンティティに変換
	 */
	static fromFirestoreFormat(data: OptimizedFirestoreDLsiteWorkData): Partial<Work> {
		return {
			id: data.id,
			productId: data.productId,
			title: data.title,
			circle: {
				id: "", // Firestore形式には含まれていない
				name: data.circle,
			},
			thumbnailUrl: data.thumbnailUrl,
			workUrl: data.workUrl,

			// 価格情報
			price: data.price
				? ({
						amount: data.price.current,
						currency: data.price.currency,
						original: data.price.original,
						discount: data.price.discount,
						point: data.price.point,
						// Value Objectのメソッドは再構築が必要
					} as any)
				: undefined,

			// 評価情報
			rating: data.rating
				? ({
						stars: data.rating.stars,
						count: data.rating.count,
						average: data.rating.averageDecimal,
						// Value Objectのメソッドは再構築が必要
					} as any)
				: undefined,

			// 日付情報
			releaseDate: data.releaseDateISO
				? ({
						original: data.releaseDate || "",
						iso: data.releaseDateISO,
						display: data.releaseDateDisplay || "",
						// Value Objectのメソッドは再構築が必要
					} as any)
				: undefined,

			// クリエイター情報
			creators: {
				voice: data.voiceActors || [],
				scenario: data.scenario || [],
				illustration: data.illustration || [],
				music: data.music || [],
				other: data.author || [],
			} as any,

			// その他
			genres: data.genres || [],
			ageRating: data.ageRating,
			workFormat: data.workFormat,
			fileFormat: data.fileFormat,
			fileSize: undefined, // Firestore形式には含まれていない
			seriesName: data.seriesName,
			wishlistCount: data.wishlistCount,
			reviewCount: undefined, // Firestore形式には含まれていない
			lastFetchedAt: data.lastFetchedAt,
		};
	}
}
