# 開発フロー重視のlefthook設定

pre-commit:
  commands:
    # 1. コードフォーマット・リント（自動修正付き）
    format-and-lint:
      glob: "*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}"
      run: npx @biomejs/biome check --write --no-errors-on-unmatched --files-ignore-unknown=true --colors=off {staged_files}
      stage_fixed: true
      fail_text: "コードフォーマット・リントに失敗しました"
    
    # 2. 型チェック（変更ファイルに影響する範囲のみ）
    typecheck-incremental:
      glob: "*.{ts,tsx}"
      run: pnpm --filter @suzumina.click/shared-types typecheck
      fail_text: "型チェックに失敗しました"

pre-push:
  commands:
    # 1. 共有型のビルド確認（依存関係の整合性保証）
    build-shared-types:
      run: pnpm --filter @suzumina.click/shared-types build
      fail_text: "共有型のビルドに失敗しました"
    
    # 2. 全体の型チェック（プッシュ前の品質保証）
    typecheck-all:
      run: pnpm typecheck
      fail_text: "TypeScript型チェックに失敗しました"
    
    # 3. 基本テスト（shared-typesのみ - 最重要）
    test-shared-types:
      run: pnpm --filter @suzumina.click/shared-types test
      fail_text: "共有型のテストに失敗しました"
