name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

permissions:
  issues: write
  pull-requests: write

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # PR„ÅÆÂ†¥Âêà„ÅØË©≤ÂΩì„Éñ„É©„É≥„ÉÅ„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà
          ref: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get PR Details
        id: pr-details
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let pr_number;
            if (context.eventName === 'issue_comment') {
              pr_number = context.issue.number;
            } else if (context.eventName === 'pull_request_review_comment') {
              pr_number = context.payload.pull_request.number;
            }
            
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number
            });
            
            return {
              pr_number: pr_number,
              pr_title: pr.title,
              pr_body: pr.body,
              pr_branch: pr.head.ref,
              base_branch: pr.base.ref
            };

      - name: Claude Code Response
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = context.payload.comment.body;
            const pr_details = ${{ steps.pr-details.outputs.result }};
            
            // Acknowledge the request
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_details.pr_number,
              body: 'ü§ñ Claude is analyzing your request...'
            });
            
            // Note: Actual Claude integration would go here
            // For now, this is a placeholder that confirms the setup is working
            
            const response = `‚úÖ Claude Code integration is set up and working!
            
            I received your comment: "${comment}"
            
            PR Details:
            - PR #${pr_details.pr_number}: ${pr_details.pr_title}
            - Branch: ${pr_details.pr_branch} ‚Üí ${pr_details.base_branch}
            
            To use Claude for code review, mention @claude in your PR comments with specific requests like:
            - "@claude review this code for best practices"
            - "@claude suggest improvements for performance"
            - "@claude help me fix the failing tests"
            `;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_details.pr_number,
              body: response
            });