name: Lightweight PR Check

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  
  # Manual triggering for testing
  workflow_dispatch:

# Cancel in-progress runs for the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.changes.outputs.web }}
      admin: ${{ steps.changes.outputs.admin }}
      functions: ${{ steps.changes.outputs.functions }}
      shared-types: ${{ steps.changes.outputs.shared-types }}
      ui: ${{ steps.changes.outputs.ui }}
      typescript-config: ${{ steps.changes.outputs.typescript-config }}
      workflows: ${{ steps.changes.outputs.workflows }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Detect changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            web:
              - 'apps/web/**'
            admin:
              - 'apps/admin/**'
            functions:
              - 'apps/functions/**'
            shared-types:
              - 'packages/shared-types/**'
            ui:
              - 'packages/ui/**'
            typescript-config:
              - 'packages/typescript-config/**'
            workflows:
              - '.github/workflows/**'

  quick-check:
    name: Quick Quality Check
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.web == 'true' || needs.changes.outputs.admin == 'true' || needs.changes.outputs.shared-types == 'true' || needs.changes.outputs.ui == 'true'
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      # Only build changed shared packages
      - name: Build shared-types (if changed)
        if: needs.changes.outputs.shared-types == 'true'
        run: pnpm --filter @suzumina.click/shared-types build
      
      - name: Build UI (if changed)
        if: needs.changes.outputs.ui == 'true'
        run: pnpm --filter @suzumina.click/ui build
      
      # Quick lint and typecheck for changed packages only
      - name: Lint web app (if changed)
        if: needs.changes.outputs.web == 'true'
        run: pnpm --filter @suzumina.click/web lint
      
      - name: Lint admin app (if changed)
        if: needs.changes.outputs.admin == 'true'
        run: pnpm --filter @suzumina.click/admin lint
      
      - name: TypeScript check web app (if changed)
        if: needs.changes.outputs.web == 'true'
        run: pnpm --filter @suzumina.click/web typecheck
      
      - name: TypeScript check admin app (if changed)
        if: needs.changes.outputs.admin == 'true'
        run: pnpm --filter @suzumina.click/admin typecheck
      
      # Quick tests for changed packages
      - name: Test web app (if changed)
        if: needs.changes.outputs.web == 'true'
        run: pnpm --filter @suzumina.click/web test --run --passWithNoTests
      
      - name: Test admin app (if changed)
        if: needs.changes.outputs.admin == 'true'
        run: pnpm --filter @suzumina.click/admin test --run --passWithNoTests
      
      - name: Test functions (if changed)
        if: needs.changes.outputs.functions == 'true'
        run: pnpm --filter @suzumina.click/functions test --run --passWithNoTests

  functions-check:
    name: Functions Quality Check
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.functions == 'true'
    timeout-minutes: 8
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build shared-types
        run: pnpm --filter @suzumina.click/shared-types build
      
      - name: Build functions
        run: pnpm --filter @suzumina.click/functions build
      
      - name: Lint functions
        run: pnpm --filter @suzumina.click/functions lint
      
      - name: Test functions
        run: pnpm --filter @suzumina.click/functions test --run

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.title, 'deps') || contains(github.event.pull_request.title, 'security') || contains(github.event.pull_request.labels.*.name, 'security')
    timeout-minutes: 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Security audit
        run: pnpm audit --audit-level moderate

  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [changes, quick-check, functions-check, security-check]
    if: always()
    
    steps:
      - name: Generate PR summary
        run: |
          echo "## 🔍 Lightweight PR Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 📁 Changed Components" >> $GITHUB_STEP_SUMMARY
          echo "- Web App: ${{ needs.changes.outputs.web == 'true' && '✅' || '⏭️' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Admin App: ${{ needs.changes.outputs.admin == 'true' && '✅' || '⏭️' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Functions: ${{ needs.changes.outputs.functions == 'true' && '✅' || '⏭️' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Shared Types: ${{ needs.changes.outputs.shared-types == 'true' && '✅' || '⏭️' }}" >> $GITHUB_STEP_SUMMARY
          echo "- UI Package: ${{ needs.changes.outputs.ui == 'true' && '✅' || '⏭️' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 🧪 Quality Checks" >> $GITHUB_STEP_SUMMARY
          echo "- Quick Check: ${{ needs.quick-check.result == 'success' && '✅ Passed' || needs.quick-check.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Functions Check: ${{ needs.functions-check.result == 'success' && '✅ Passed' || needs.functions-check.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Security Check: ${{ needs.security-check.result == 'success' && '✅ Passed' || needs.security-check.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 💡 Optimization Benefits" >> $GITHUB_STEP_SUMMARY
          echo "- ⚡ Only changed components tested" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 ~5-10x faster than full CI" >> $GITHUB_STEP_SUMMARY
          echo "- 💰 Significant cost reduction" >> $GITHUB_STEP_SUMMARY
          echo "- 🎯 Early feedback for developers" >> $GITHUB_STEP_SUMMARY