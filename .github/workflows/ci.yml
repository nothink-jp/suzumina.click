name: CI

on:
  workflow_call: {}
  pull_request:
    types: [opened, synchronize]

jobs:
  check:
    name: Check
    timeout-minutes: 5
    runs-on: ubuntu-latest

    # PostgreSQLサービスの追加
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: suzumina_app
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: suzumina_test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://suzumina_app:test_password@localhost:5432/suzumina_test_db
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: test_secret
      DISCORD_CLIENT_ID: test_client_id
      DISCORD_CLIENT_SECRET: test_client_secret
      DISCORD_GUILD_ID: test_guild_id
      NODE_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Spell Check
        run: bun run spell-check

      - name: Run CI Checks (Lint, Format, Type Check)
        run: bun run ci:check

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U suzumina_app; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Setup test database
        working-directory: apps/web
        run: |
          echo "Running PostgreSQL migrations..."
          bun run db:migrate
          echo "Migration completed"

      - name: Run Tests and Generate Coverage
        working-directory: apps/web
        run: bun run test:coverage

      - name: Report Test Coverage to DeepSource
        run: |
          curl https://deepsource.io/cli | sh
          ./bin/deepsource report --analyzer test-coverage --key javascript --value-file ./apps/web/coverage/lcov.info
        env:
          DEEPSOURCE_DSN: ${{ vars.DEEPSOURCE_DSN }}
