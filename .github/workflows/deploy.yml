name: '統合デプロイ'

on:
  # 手動トリガー
  workflow_dispatch:
    inputs:
      branch:
        description: 'デプロイするブランチ'
        required: true
        default: 'main'
        type: string
      trigger_source:
        description: 'トリガー元（ci または manual）'
        required: false
        default: 'manual'
        type: string
      deploy_web:
        description: 'Webアプリケーションをデプロイするか'
        required: false
        default: true
        type: boolean
      deploy_functions:
        description: 'Cloud Functionsをデプロイするか'
        required: false
        default: true
        type: boolean
      ci_run_id:
        description: 'CI実行ID（CIトリガー時のみ）'
        required: false
        type: string

# ワークフローにactions権限を付与
# 他のワークフローをトリガーするにはactions:write権限が必要
permissions:
  contents: read
  actions: write  # workflow_dispatchイベントをトリガーするために必要

jobs:
  # デプロイ条件の確認
  verify-deployment-conditions:
    name: 'デプロイ条件の確認'
    runs-on: ubuntu-latest

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      # CIワークフローからトリガーされた場合、CIの完了を待機
      - name: CI完了の確認
        if: ${{ github.event.inputs.trigger_source == 'ci' && github.event.inputs.ci_run_id != '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // CIワークフローの完了を待機
            const runId = '${{ github.event.inputs.ci_run_id }}';
            console.log(`CI実行ID ${runId} の完了を確認中...`);
            
            let checkCount = 0;
            const maxChecks = 30; // 最大チェック回数（タイムアウト設定）
            
            while (checkCount < maxChecks) {
              const { data: run } = await github.rest.actions.getWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: parseInt(runId)
              });
              
              if (run.status === 'completed') {
                if (run.conclusion === 'success') {
                  console.log('CIワークフローが正常に完了しました');
                  break;
                } else {
                  core.setFailed(`CIワークフローが失敗しました: ${run.conclusion}`);
                  return;
                }
              }
              
              console.log(`CIワークフローはまだ実行中です... (${checkCount + 1}/${maxChecks})`);
              checkCount++;
              
              // 10秒待機
              await new Promise(resolve => setTimeout(resolve, 10000));
            }
            
            if (checkCount >= maxChecks) {
              core.setFailed('CIワークフローの完了待機がタイムアウトしました');
            }

      - name: デプロイ情報を出力
        run: |
          echo "デプロイ情報:"
          echo "- トリガー: workflow_dispatch"
          echo "- ブランチ: ${{ github.event.inputs.branch }}"
          echo "- Webアプリケーション: ${{ github.event.inputs.deploy_web == 'true' && 'デプロイする' || 'デプロイしない' }}"
          echo "- Cloud Functions: ${{ github.event.inputs.deploy_functions == 'true' && 'デプロイする' || 'デプロイしない' }}"
          echo "- トリガー元: ${{ github.event.inputs.trigger_source }}"
          echo "- CI実行ID: ${{ github.event.inputs.ci_run_id || 'なし' }}"
          echo "- 実行者: ${{ github.actor }}"
          echo "- 日時: $(date '+%Y年%m月%d日 %H:%M:%S')"

  # Webアプリケーションのデプロイ
  deploy-web-app:
    name: 'Webアプリケーションデプロイ'
    needs: verify-deployment-conditions
    if: github.event.inputs.deploy_web == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Webアプリケーションデプロイワークフローをトリガー
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-web.yml',
              ref: '${{ github.event.inputs.branch }}',
              inputs: {
                branch: '${{ github.event.inputs.branch }}',
                trigger_source: '${{ github.event.inputs.trigger_source }}'
              }
            });
            console.log('Webアプリケーションデプロイワークフローをトリガーしました');

  # Cloud Functionsのデプロイ
  deploy-cloud-functions:
    name: 'Cloud Functionsデプロイ'
    needs: verify-deployment-conditions
    if: github.event.inputs.deploy_functions == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Cloud Functionsデプロイワークフローをトリガー
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-functions.yml',
              ref: '${{ github.event.inputs.branch }}',
              inputs: {
                branch: '${{ github.event.inputs.branch }}',
                trigger_source: '${{ github.event.inputs.trigger_source }}'
              }
            });
            console.log('Cloud Functionsデプロイワークフローをトリガーしました');

  # デプロイ完了通知
  notify-deployment:
    name: 'デプロイ完了通知'
    needs: [verify-deployment-conditions, deploy-web-app, deploy-cloud-functions]
    if: |
      always() && (
        (needs.deploy-web-app.result == 'success' || github.event.inputs.deploy_web != 'true') &&
        (needs.deploy-cloud-functions.result == 'success' || github.event.inputs.deploy_functions != 'true')
      )
    runs-on: ubuntu-latest
    
    steps:
      - name: デプロイ完了メッセージ
        run: |
          echo "::notice title=統合デプロイ完了::指定されたコンポーネントのデプロイワークフローが正常にトリガーされました"
          echo "デプロイ日時: $(date '+%Y年%m月%d日 %H:%M:%S')"
          echo "トリガー: workflow_dispatch"
          echo "実行者: ${{ github.actor }}"
          
          # デプロイ結果の詳細
          if [ "${{ github.event.inputs.deploy_web }}" == "true" ]; then
            echo "- Webアプリケーション: デプロイワークフローをトリガーしました"
          else
            echo "- Webアプリケーション: デプロイ対象外"
          fi
          
          if [ "${{ github.event.inputs.deploy_functions }}" == "true" ]; then
            echo "- Cloud Functions: デプロイワークフローをトリガーしました"
          else
            echo "- Cloud Functions: デプロイ対象外"
          fi
          
          echo "注意: 各コンポーネントのデプロイ状況は、個別のワークフロー実行結果を確認してください。"