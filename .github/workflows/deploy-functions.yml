name: Deploy Cloud Functions

on:
  push:
    branches:
      - main # デプロイ対象のブランチに合わせて変更してください
  workflow_dispatch: # 手動実行を可能にする

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install root dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared-types first
        run: pnpm --filter=@suzumina.click/shared-types build

      - name: Build functions
        run: pnpm --filter=@suzumina.click/functions build

      - name: Run tests
        run: pnpm --filter=@suzumina.click/functions test

      - name: Prepare functions for deployment
        # pnpm deploy を使用して、デプロイに必要なファイルとプロダクション依存関係を ./functions-build にコピーします。
        # これにより、Cloud Functions にアップロードされる内容が最適化されます。
        # pnpm v10では --legacy フラグが必要
        run: |
          pnpm --filter=@suzumina.click/functions deploy --prod --legacy ./functions-build
          # deploy-cloud-functions アクションが期待する .gitignore ファイルをコピー
          cp apps/functions/.gitignore ./functions-build/ || echo "# Cloud Functions deployment" > ./functions-build/.gitignore

      - name: Authenticate to GCP
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          # Workload Identity Provider を PROJECT_NUMBER から動的に構築
          workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          # Cloud Functions デプロイ専用サービスアカウントを PROJECT_ID から動的に構築
          service_account: 'cloud-functions-deployer-sa@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com'

      - name: Deploy fetchYouTubeVideos function
        id: deploy-youtube
        uses: google-github-actions/deploy-cloud-functions@v3
        with:
          name: fetchYouTubeVideos
          runtime: nodejs22
          entry_point: fetchYouTubeVideos
          source_dir: ./functions-build
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          region: asia-northeast1
          environment_variables: NODE_ENV=production

      - name: Deploy fetchDLsiteWorks function
        id: deploy-dlsite
        uses: google-github-actions/deploy-cloud-functions@v3
        with:
          name: fetchDLsiteWorks
          runtime: nodejs22
          entry_point: fetchDLsiteWorks
          source_dir: ./functions-build
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          region: asia-northeast1
          environment_variables: NODE_ENV=production

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Pub/Sub triggers
        run: |
          # YouTube関数用のPub/Subトリガーを設定
          gcloud functions deploy fetchYouTubeVideos \
            --trigger-topic=youtube-video-fetch-trigger \
            --region=asia-northeast1 \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --update-labels=trigger=pubsub \
            --quiet

          # DLsite関数用のPub/Subトリガーを設定
          gcloud functions deploy fetchDLsiteWorks \
            --trigger-topic=dlsite-works-fetch-trigger \
            --region=asia-northeast1 \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --update-labels=trigger=pubsub \
            --quiet

          echo "Pub/Subトリガーの設定が完了しました"

      - name: Deploy status summary
        run: |
          echo "## デプロイ結果" >> $GITHUB_STEP_SUMMARY
          echo "- fetchYouTubeVideos: デプロイ完了（Pub/Subトリガー: youtube-video-fetch-trigger）" >> $GITHUB_STEP_SUMMARY
          echo "- fetchDLsiteWorks: デプロイ完了（Pub/Subトリガー: dlsite-works-fetch-trigger）" >> $GITHUB_STEP_SUMMARY
          echo "プロジェクト: ${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "リージョン: asia-northeast1" >> $GITHUB_STEP_SUMMARY
          echo "ランタイム: nodejs22" >> $GITHUB_STEP_SUMMARY