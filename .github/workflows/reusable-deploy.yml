name: Reusable Deploy Web App

on:
  workflow_call:
    inputs:
      git_ref:
        description: 'Git ref (branch, tag, or SHA) to checkout'
        required: true
        type: string
      image_tag:
        description: 'Docker image tag (e.g., commit SHA)'
        required: true
        type: string

jobs:
  build-and-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: "read" # Needed to checkout code and read package.json
      id-token: "write" # Required for Workload Identity Federation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git_ref }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generate Image Name
        id: generate_name
        run: |
          VERSION=$(jq -r .version apps/web/package.json)
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          GENERATED_NAME="web-app-v${VERSION}-${TIMESTAMP}"
          echo "GENERATED_IMAGE_NAME=${GENERATED_NAME}" >> $GITHUB_ENV
          echo "Generated image name: ${GENERATED_NAME}"

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_SA_EMAIL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud credential helper
        run: gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: true
          tags: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO }}/${{ env.GENERATED_IMAGE_NAME }}:${{ inputs.image_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: 'web' # Hardcoded service name
          region: ${{ vars.GCP_REGION }}
          image: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO }}/${{ env.GENERATED_IMAGE_NAME }}:${{ inputs.image_tag }}

      - name: Show deployed URL
        run: |
          echo "Deployed to: ${{ steps.deploy.outputs.url }}"