name: Reusable Deploy Web App

on:
  workflow_call:
    inputs:
      git_ref:
        description: 'Git ref (branch, tag, or SHA) to checkout'
        required: true
        type: string
      # image_tag input is removed, tag is generated internally

jobs:
  build-and-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Increase timeout to 30 minutes

    permissions:
      contents: "read" # Needed to checkout code and read package.json
      id-token: "write" # Required for Workload Identity Federation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git_ref }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generate Image Tag
        id: generate_tag
        run: |
          VERSION=$(jq -r .version apps/web/package.json)
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          # Generate tag in vX.Y.Z-YYYYMMDD-HHMMSS format
          GENERATED_TAG="v${VERSION}-${TIMESTAMP}"
          # Set the generated tag as an output of this step
          echo "generated_tag=${GENERATED_TAG}" >> $GITHUB_OUTPUT
          echo "Generated image tag: ${GENERATED_TAG}"

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_SA_EMAIL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud credential helper
        run: gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: true
          # Use fixed image name 'web-app' and the generated tag
          tags: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO }}/web-app:${{ steps.generate_tag.outputs.generated_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        # with:
        #   terraform_version: "1.x.x" # Specify version if needed

      - name: Terraform Init
        run: terraform init
        working-directory: ./iac/environments/dev

      - name: Terraform Apply Refresh Only # Add apply -refresh-only step
        run: |
          terraform apply -refresh-only -auto-approve \
            -var="docker_image_tag=${{ steps.generate_tag.outputs.generated_tag }}" \
            -var="project_id=${{ vars.GCP_PROJECT_ID }}" \
            -var="region=${{ vars.GCP_REGION }}"
        working-directory: ./iac/environments/dev

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="docker_image_tag=${{ steps.generate_tag.outputs.generated_tag }}" \
            -var="project_id=${{ vars.GCP_PROJECT_ID }}" \
            -var="region=${{ vars.GCP_REGION }}"
        working-directory: ./iac/environments/dev

      # Deploy to Cloud Run ステップと Show deployed URL ステップを削除