name: Security Scan

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2:00 AM UTC
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'apps/*/package.json'
      - 'packages/*/package.json'
      - '.github/workflows/security-scan.yml'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js environment
        uses: ./.github/actions/setup-node-env
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run npm audit
        continue-on-error: true
        run: |
          echo "## Dependency Audit Results" > audit-summary.md
          echo "" >> audit-summary.md
          
          # Run audit for each workspace
          pnpm audit --json > audit-results.json || true
          
          # Generate summary
          if [ -f audit-results.json ]; then
            echo "### Summary" >> audit-summary.md
            node -e "
              try {
                const audit = JSON.parse(require('fs').readFileSync('audit-results.json', 'utf8'));
                if (audit.metadata && audit.metadata.vulnerabilities) {
                  console.log('Total vulnerabilities: ' + audit.metadata.vulnerabilities.total);
                  console.log('Critical: ' + (audit.metadata.vulnerabilities.critical || 0));
                  console.log('High: ' + (audit.metadata.vulnerabilities.high || 0));
                  console.log('Moderate: ' + (audit.metadata.vulnerabilities.moderate || 0));
                  console.log('Low: ' + (audit.metadata.vulnerabilities.low || 0));
                } else {
                  console.log('No vulnerability data found');
                }
              } catch (e) {
                console.log('Error parsing audit results: ' + e.message);
              }
            " >> audit-summary.md
          fi
          
          cat audit-summary.md
      
      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-audit-results
          path: |
            audit-results.json
            audit-summary.md
          retention-days: 30

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js environment
        uses: ./.github/actions/setup-node-env
      
      - name: Build shared packages
        run: |
          pnpm install --frozen-lockfile
          pnpm --filter @suzumina.click/shared-types build
      
      - name: Build Docker image
        run: |
          docker build -f apps/web/Dockerfile -t suzumina-click:latest .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'suzumina-click:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Generate Trivy summary
        run: |
          echo "## Container Security Scan Results" > trivy-summary.md
          echo "" >> trivy-summary.md
          
          # Run Trivy again for summary output
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:latest image --severity HIGH,CRITICAL --no-progress \
            suzumina-click:latest > trivy-output.txt || true
          
          if [ -f trivy-output.txt ]; then
            echo '```' >> trivy-summary.md
            cat trivy-output.txt >> trivy-summary.md
            echo '```' >> trivy-summary.md
          fi
      
      - name: Upload container scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: container-scan-results
          path: |
            trivy-results.sarif
            trivy-summary.md
            trivy-output.txt
          retention-days: 30

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  security-summary:
    name: Security Summary
    needs: [dependency-scan, container-scan, codeql]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: security-results
      
      - name: Generate security summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "Scan Date: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> security-summary.md
          echo "Repository: ${{ github.repository }}" >> security-summary.md
          echo "Commit: ${{ github.sha }}" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## Job Status" >> security-summary.md
          echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> security-summary.md
          echo "- Container Scan: ${{ needs.container-scan.result }}" >> security-summary.md
          echo "- CodeQL Analysis: ${{ needs.codeql.result }}" >> security-summary.md
          echo "" >> security-summary.md
          
          # Include dependency audit summary if available
          if [ -f "security-results/dependency-audit-results/audit-summary.md" ]; then
            echo "## Dependency Vulnerabilities" >> security-summary.md
            cat security-results/dependency-audit-results/audit-summary.md >> security-summary.md
            echo "" >> security-summary.md
          fi
          
          # Include container scan summary if available
          if [ -f "security-results/container-scan-results/trivy-summary.md" ]; then
            cat security-results/container-scan-results/trivy-summary.md >> security-summary.md
            echo "" >> security-summary.md
          fi
          
          echo "## Next Steps" >> security-summary.md
          echo "1. Review security alerts in the GitHub Security tab" >> security-summary.md
          echo "2. Update vulnerable dependencies" >> security-summary.md
          echo "3. Address any critical or high severity issues" >> security-summary.md
          echo "4. Monitor for new vulnerabilities regularly" >> security-summary.md
          
          cat security-summary.md
      
      - name: Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 90