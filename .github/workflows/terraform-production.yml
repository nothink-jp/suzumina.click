name: 'Terraform 本番環境デプロイ'

on:
  push:
    branches:
      - main
    paths:
      - 'apps/functions/**'
      - 'terraform/**'
      - '.github/workflows/terraform-*'

jobs:
  terraform-production:
    name: 'Terraform 本番環境デプロイ'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: Node.js のセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: pnpm のセットアップ
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: 依存関係のキャッシュ
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-pnpm-functions-${{ hashFiles('apps/functions/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-functions-

      - name: Functionsの依存関係インストール
        run: pnpm install
        working-directory: ./apps/functions
      
      - name: Functionsのビルド
        run: pnpm run build
        working-directory: ./apps/functions

      # Terraformをセットアップ
      - name: Terraform セットアップ
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0
          terraform_wrapper: false

      # GCPの認証を設定
      - name: Google Cloudへの認証
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          export_environment_variables: true
          create_credentials_file: true
          universe: googleapis.com
          cleanup_credentials: true
          access_token_lifetime: 3600s
          access_token_scopes: https://www.googleapis.com/auth/cloud-platform

      # Terraformの初期化
      - name: Terraform初期化
        run: terraform init
        working-directory: ./terraform

      # 本番環境用のワークスペース準備（デフォルト）
      - name: Terraformワークスペース設定
        run: |
          terraform workspace select default || terraform workspace new default
        working-directory: ./terraform

      # Terraformプラン（変更内容の確認）
      - name: Terraformプラン
        run: |
          terraform plan -var-file="terraform.tfvars" -var="environment=production" -no-color -input=false
        working-directory: ./terraform
        env:
          TF_VAR_youtube_api_key: ${{ secrets.YOUTUBE_API_KEY }}
      
      # 本番環境への適用前に確認（手動承認ステップ）
      - name: 本番環境デプロイの手動承認
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: nothink-jp  # 承認者のGitHubユーザー名を指定
          minimum-approvals: 1
          issue-title: "本番環境へのTerraformデプロイ承認"
          issue-body: "このPRは**本番環境**にTerraformの変更をデプロイします。レビューして承認してください。"
          exclude-workflow-initiator-as-approver: false
          
      # Terraformの適用（本番環境へのデプロイ）
      - name: Terraform適用
        if: success()
        run: |
          terraform apply -var-file="terraform.tfvars" -var="environment=production" -auto-approve -input=false
        working-directory: ./terraform
        env:
          TF_VAR_youtube_api_key: ${{ secrets.YOUTUBE_API_KEY }}