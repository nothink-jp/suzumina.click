name: Claude PR Assistant

on:
  issue_comment:
    types: [created]

permissions:
  issues: write
  pull-requests: write

jobs:
  claude-assistant:
    if: |
      github.event.issue.pull_request && 
      contains(github.event.comment.body, '@claude')
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get PR Information
        id: pr-info
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = context.issue.number;
            
            // Get PR details
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number
            });
            
            // Get PR diff
            const { data: diff } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number,
              mediaType: {
                format: 'diff'
              }
            });
            
            // Get PR files
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number
            });
            
            return {
              pr_number: pr_number,
              pr_title: pr.title,
              pr_body: pr.body || '',
              pr_diff: diff,
              files_changed: files.length,
              comment: context.payload.comment.body
            };

      - name: Acknowledge Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_info = ${{ steps.pr-info.outputs.result }};
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_info.pr_number,
              body: 'ü§ñ Claude is analyzing your request...'
            });

      - name: Process with Claude (Placeholder)
        id: claude-response
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_info = ${{ steps.pr-info.outputs.result }};
            
            // TODO: „Åì„Åì„ÅßÂÆüÈöõ„ÅÆClaude API„ÇíÂëº„Å≥Âá∫„Åô
            // ÁèæÂú®„ÅØ„Éó„É¨„Éº„Çπ„Éõ„É´„ÉÄ„ÉºÂÆüË£Ö
            
            let response = `## Claude PR Assistant Response\n\n`;
            response += `I received your request: "${pr_info.comment}"\n\n`;
            response += `### PR Summary\n`;
            response += `- **Title**: ${pr_info.pr_title}\n`;
            response += `- **Files Changed**: ${pr_info.files_changed}\n\n`;
            response += `### üöß Note\n`;
            response += `This is currently a placeholder implementation. `;
            response += `To enable actual Claude integration:\n\n`;
            response += `1. Add \`ANTHROPIC_API_KEY\` to repository secrets\n`;
            response += `2. Implement Claude API calls in the workflow\n`;
            response += `3. Parse and analyze PR content with Claude\n\n`;
            response += `For now, I can confirm that the GitHub integration is working correctly!`;
            
            return response;

      - name: Post Claude Response
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_info = ${{ steps.pr-info.outputs.result }};
            const response = ${{ steps.claude-response.outputs.result }};
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_info.pr_number,
              body: response
            });