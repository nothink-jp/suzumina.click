# PROJECT GUIDELINES FOR AI ASSISTANT

## 1. Documentation Management
- Task tracking in `docs/TODO.md` (チェックリスト管理)
- Change history in `docs/CHANGELOG.md` (変更履歴管理)
- Implementation policies in `docs/POLICY.md` (実装前に必ず確認)
- Release notes: Auto-generated from `docs/CHANGELOG.md` using GitHub Releases
- Markdown rule: Maximum 100 lines, remove unnecessary documents

## 2. Development Practices
### Testing Methodology
- Test approach: Red-Green-Refactor cycle + Arrange-Act-Assert pattern
- Coverage target: 80% minimum

### Code Quality Standards
- Function design:
  - Pure functions preferred
  - Short functions
  - Single responsibility principle
- Design principles:
  - Code collocation (関連コードの近接配置)
  - Readability first
  - Maintainability
  - Testability
  - Avoid duplication
  - Simple design

## 3. Development Workflow
- Post-implementation checklist:
  - Run tests
  - Format code
  - Lint code
  - Verify build
  - Fix issues immediately

## 4. Version Control
- Commit convention (Conventional Commits):
  - feat: New features
  - fix: Bug fixes
  - docs: Documentation
  - style: Formatting
  - refactor: Refactoring
  - test: Tests
  - chore: Chores
- Development flow:
  - Trunk-based development
  - GitHub Flow

## 5. Language Settings
- Thinking: English (en-US)
- Output: Japanese (ja-JP)
- Enforce output language: Yes
- Preserve technical terms: Yes

## 6. Documentation Standards
- Comment language: Japanese (ja-JP)
- Docstring styles:
  - TypeScript: JSDoc

## 7. Testing Settings
- Coverage enabled: Yes
- Coverage threshold: 80%


# Monorepo with Google Cloud Functions

## プロジェクト構造
- packages/shared: 共有ライブラリ
- packages/functions: Cloud Functions
- workspace:* 依存関係を使用

## デプロイメント注意事項
- Cloud Buildは workspace:* を直接解決できない
- pnpm packを使ってbundle化が必要
- デプロイ前にdist/ディレクトリにバンドル

## 推奨デプロイ方法
1. `pnpm pack` でパッケージ化
2. Cloud Storageにアップロード
3. `--source gs://bucket/file.zip` でデプロイ

## 重要コマンド
```bash
# バンドルデプロイ
./scripts/bundle-deploy.sh

# packデプロイ  
./scripts/pack-deploy.sh
```

## 避けるべきこと
- 直接 `gcloud functions deploy` を実行する
- workspace:* を含むpackage.jsonをそのままデプロイ